{
	"id": "dcd9ee442ac9551950ddb7425de9f6cd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/FunctionExample.sol": {
				"content": "pragma solidity ^0.5.13;\r\n\r\ncontract FunctionExample {\r\n    mapping(address => uint64) public balanceRecieved;\r\n\r\n    function recieveMoney() public payable {\r\n        assert(balanceRecieved[msg.sender] + uint64(msg.value) >= balanceRecieved[msg.sender]);\r\n        balanceRecieved[msg.sender] += uint64(msg.value);\r\n    }\r\n\r\n    function withdrawMoney(address payable _to, uint64 _amount) public {\r\n        require(_amount <= balanceRecieved[msg.sender],\"insufficient funds\");\r\n        assert(balanceRecieved[msg.sender] >= balanceRecieved[msg.sender] - _amount);\r\n        balanceRecieved[msg.sender] -= _amount;\r\n        _to.transfer(_amount);\r\n    }\r\n\r\n    //fallback function if we do not want to interact with \r\n    // any particular function in the smart contract\r\n\r\n    function () external payable {\r\n        recieveMoney();\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/FunctionExample.sol": {
				"FunctionExample": {
					"abi": [
						{
							"payable": true,
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceRecieved",
							"outputs": [
								{
									"internalType": "uint64",
									"name": "",
									"type": "uint64"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "recieveMoney",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint64",
									"name": "_amount",
									"type": "uint64"
								}
							],
							"name": "withdrawMoney",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/FunctionExample.sol\":28:841  contract FunctionExample {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/FunctionExample.sol\":28:841  contract FunctionExample {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/FunctionExample.sol\":28:841  contract FunctionExample {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0ad19aeb\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xcca955a0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xd8d4f50d\n      eq\n      tag_4\n      jumpi\n    tag_1:\n        /* \"contracts/FunctionExample.sol\":816:830  recieveMoney() */\n      tag_7\n        /* \"contracts/FunctionExample.sol\":816:828  recieveMoney */\n      tag_8\n        /* \"contracts/FunctionExample.sol\":816:830  recieveMoney() */\n      jump\t// in\n    tag_7:\n        /* \"contracts/FunctionExample.sol\":28:841  contract FunctionExample {\r... */\n      stop\n        /* \"contracts/FunctionExample.sol\":329:651  function withdrawMoney(address payable _to, uint64 _amount) public {\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_9\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_9:\n        /* \"contracts/FunctionExample.sol\":329:651  function withdrawMoney(address payable _to, uint64 _amount) public {\r... */\n      pop\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_11\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_11:\n        /* \"contracts/FunctionExample.sol\":329:651  function withdrawMoney(address payable _to, uint64 _amount) public {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_12\n      jump\t// in\n    tag_10:\n      stop\n        /* \"contracts/FunctionExample.sol\":118:321  function recieveMoney() public payable {\r... */\n    tag_3:\n      tag_13\n      tag_8\n      jump\t// in\n    tag_13:\n      stop\n        /* \"contracts/FunctionExample.sol\":60:109  mapping(address => uint64) public balanceRecieved */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_14\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_14:\n        /* \"contracts/FunctionExample.sol\":60:109  mapping(address => uint64) public balanceRecieved */\n      pop\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_16:\n        /* \"contracts/FunctionExample.sol\":60:109  mapping(address => uint64) public balanceRecieved */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_17\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FunctionExample.sol\":118:321  function recieveMoney() public payable {\r... */\n    tag_8:\n        /* \"contracts/FunctionExample.sol\":226:241  balanceRecieved */\n      0x00\n        /* \"contracts/FunctionExample.sol\":226:253  balanceRecieved[msg.sender] */\n      dup1\n        /* \"contracts/FunctionExample.sol\":242:252  msg.sender */\n      caller\n        /* \"contracts/FunctionExample.sol\":226:253  balanceRecieved[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/FunctionExample.sol\":175:253  balanceRecieved[msg.sender] + uint64(msg.value) >= balanceRecieved[msg.sender] */\n      0xffffffffffffffff\n      and\n        /* \"contracts/FunctionExample.sol\":212:221  msg.value */\n      callvalue\n        /* \"contracts/FunctionExample.sol\":175:190  balanceRecieved */\n      0x00\n        /* \"contracts/FunctionExample.sol\":175:202  balanceRecieved[msg.sender] */\n      dup1\n        /* \"contracts/FunctionExample.sol\":191:201  msg.sender */\n      caller\n        /* \"contracts/FunctionExample.sol\":175:202  balanceRecieved[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/FunctionExample.sol\":175:222  balanceRecieved[msg.sender] + uint64(msg.value) */\n      add\n        /* \"contracts/FunctionExample.sol\":175:253  balanceRecieved[msg.sender] + uint64(msg.value) >= balanceRecieved[msg.sender] */\n      0xffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"contracts/FunctionExample.sol\":168:254  assert(balanceRecieved[msg.sender] + uint64(msg.value) >= balanceRecieved[msg.sender]) */\n      tag_19\n      jumpi\n      invalid\n    tag_19:\n        /* \"contracts/FunctionExample.sol\":303:312  msg.value */\n      callvalue\n        /* \"contracts/FunctionExample.sol\":265:280  balanceRecieved */\n      0x00\n        /* \"contracts/FunctionExample.sol\":265:292  balanceRecieved[msg.sender] */\n      dup1\n        /* \"contracts/FunctionExample.sol\":281:291  msg.sender */\n      caller\n        /* \"contracts/FunctionExample.sol\":265:292  balanceRecieved[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/FunctionExample.sol\":265:313  balanceRecieved[msg.sender] += uint64(msg.value) */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      add\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/FunctionExample.sol\":118:321  function recieveMoney() public payable {\r... */\n      jump\t// out\n        /* \"contracts/FunctionExample.sol\":329:651  function withdrawMoney(address payable _to, uint64 _amount) public {\r... */\n    tag_12:\n        /* \"contracts/FunctionExample.sol\":426:441  balanceRecieved */\n      0x00\n        /* \"contracts/FunctionExample.sol\":426:453  balanceRecieved[msg.sender] */\n      dup1\n        /* \"contracts/FunctionExample.sol\":442:452  msg.sender */\n      caller\n        /* \"contracts/FunctionExample.sol\":426:453  balanceRecieved[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/FunctionExample.sol\":415:453  _amount <= balanceRecieved[msg.sender] */\n      0xffffffffffffffff\n      and\n        /* \"contracts/FunctionExample.sol\":415:422  _amount */\n      dup2\n        /* \"contracts/FunctionExample.sol\":415:453  _amount <= balanceRecieved[msg.sender] */\n      0xffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"contracts/FunctionExample.sol\":407:475  require(_amount <= balanceRecieved[msg.sender],\"insufficient funds\") */\n      tag_21\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x696e73756666696369656e742066756e64730000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_21:\n        /* \"contracts/FunctionExample.sol\":554:561  _amount */\n      dup1\n        /* \"contracts/FunctionExample.sol\":524:539  balanceRecieved */\n      0x00\n        /* \"contracts/FunctionExample.sol\":524:551  balanceRecieved[msg.sender] */\n      dup1\n        /* \"contracts/FunctionExample.sol\":540:550  msg.sender */\n      caller\n        /* \"contracts/FunctionExample.sol\":524:551  balanceRecieved[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/FunctionExample.sol\":524:561  balanceRecieved[msg.sender] - _amount */\n      sub\n        /* \"contracts/FunctionExample.sol\":493:561  balanceRecieved[msg.sender] >= balanceRecieved[msg.sender] - _amount */\n      0xffffffffffffffff\n      and\n        /* \"contracts/FunctionExample.sol\":493:508  balanceRecieved */\n      0x00\n        /* \"contracts/FunctionExample.sol\":493:520  balanceRecieved[msg.sender] */\n      dup1\n        /* \"contracts/FunctionExample.sol\":509:519  msg.sender */\n      caller\n        /* \"contracts/FunctionExample.sol\":493:520  balanceRecieved[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/FunctionExample.sol\":493:561  balanceRecieved[msg.sender] >= balanceRecieved[msg.sender] - _amount */\n      0xffffffffffffffff\n      and\n      lt\n      iszero\n        /* \"contracts/FunctionExample.sol\":486:562  assert(balanceRecieved[msg.sender] >= balanceRecieved[msg.sender] - _amount) */\n      tag_22\n      jumpi\n      invalid\n    tag_22:\n        /* \"contracts/FunctionExample.sol\":604:611  _amount */\n      dup1\n        /* \"contracts/FunctionExample.sol\":573:588  balanceRecieved */\n      0x00\n        /* \"contracts/FunctionExample.sol\":573:600  balanceRecieved[msg.sender] */\n      dup1\n        /* \"contracts/FunctionExample.sol\":589:599  msg.sender */\n      caller\n        /* \"contracts/FunctionExample.sol\":573:600  balanceRecieved[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/FunctionExample.sol\":573:611  balanceRecieved[msg.sender] -= _amount */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      sub\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/FunctionExample.sol\":622:625  _to */\n      dup2\n        /* \"contracts/FunctionExample.sol\":622:634  _to.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FunctionExample.sol\":622:643  _to.transfer(_amount) */\n      0x08fc\n        /* \"contracts/FunctionExample.sol\":635:642  _amount */\n      dup3\n        /* \"contracts/FunctionExample.sol\":622:643  _to.transfer(_amount) */\n      0xffffffffffffffff\n      and\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_23\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_23:\n        /* \"contracts/FunctionExample.sol\":622:643  _to.transfer(_amount) */\n      pop\n        /* \"contracts/FunctionExample.sol\":329:651  function withdrawMoney(address payable _to, uint64 _amount) public {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FunctionExample.sol\":60:109  mapping(address => uint64) public balanceRecieved */\n    tag_17:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      dup2\n      jump\t// out\n\n    auxdata: 0xa265627a7a723158207ccc943a1d2828d2eb6a6b2bdda248317f698a018134aa49064100814cd6148b64736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610539806100206000396000f3fe6080604052600436106100345760003560e01c80630ad19aeb1461003e578063cca955a0146100a3578063d8d4f50d146100ad575b61003c610126565b005b34801561004a57600080fd5b506100a16004803603604081101561006157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803567ffffffffffffffff16906020019092919050505061026a565b005b6100ab610126565b005b3480156100b957600080fd5b506100fc600480360360208110156100d057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104dd565b604051808267ffffffffffffffff1667ffffffffffffffff16815260200191505060405180910390f35b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff16346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff160167ffffffffffffffff1610156101ea57fe5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282829054906101000a900467ffffffffffffffff160192506101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff168167ffffffffffffffff161115610346576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f696e73756666696369656e742066756e6473000000000000000000000000000081525060200191505060405180910390fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff160367ffffffffffffffff166000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff16101561040a57fe5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282829054906101000a900467ffffffffffffffff160392506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff166108fc8267ffffffffffffffff169081150290604051600060405180830381858888f193505050501580156104d8573d6000803e3d6000fd5b505050565b60006020528060005260406000206000915054906101000a900467ffffffffffffffff168156fea265627a7a723158207ccc943a1d2828d2eb6a6b2bdda248317f698a018134aa49064100814cd6148b64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x539 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAD19AEB EQ PUSH2 0x3E JUMPI DUP1 PUSH4 0xCCA955A0 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0xD8D4F50D EQ PUSH2 0xAD JUMPI JUMPDEST PUSH2 0x3C PUSH2 0x126 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x26A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAB PUSH2 0x126 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND ADD PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x1EA JUMPI INVALID JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND ADD SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x346 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x696E73756666696369656E742066756E64730000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SUB PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x40A JUMPI INVALID JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SUB SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x4D8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH29 0xCC943A1D2828D2EB6A6B2BDDA248317F698A018134AA49064100814CD6 EQ DUP12 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "28:813:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;28:813:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100345760003560e01c80630ad19aeb1461003e578063cca955a0146100a3578063d8d4f50d146100ad575b61003c610126565b005b34801561004a57600080fd5b506100a16004803603604081101561006157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803567ffffffffffffffff16906020019092919050505061026a565b005b6100ab610126565b005b3480156100b957600080fd5b506100fc600480360360208110156100d057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104dd565b604051808267ffffffffffffffff1667ffffffffffffffff16815260200191505060405180910390f35b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff16346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff160167ffffffffffffffff1610156101ea57fe5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282829054906101000a900467ffffffffffffffff160192506101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff168167ffffffffffffffff161115610346576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f696e73756666696369656e742066756e6473000000000000000000000000000081525060200191505060405180910390fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff160367ffffffffffffffff166000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900467ffffffffffffffff1667ffffffffffffffff16101561040a57fe5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282829054906101000a900467ffffffffffffffff160392506101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff166108fc8267ffffffffffffffff169081150290604051600060405180830381858888f193505050501580156104d8573d6000803e3d6000fd5b505050565b60006020528060005260406000206000915054906101000a900467ffffffffffffffff168156fea265627a7a723158207ccc943a1d2828d2eb6a6b2bdda248317f698a018134aa49064100814cd6148b64736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xAD19AEB EQ PUSH2 0x3E JUMPI DUP1 PUSH4 0xCCA955A0 EQ PUSH2 0xA3 JUMPI DUP1 PUSH4 0xD8D4F50D EQ PUSH2 0xAD JUMPI JUMPDEST PUSH2 0x3C PUSH2 0x126 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x26A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xAB PUSH2 0x126 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND ADD PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x1EA JUMPI INVALID JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND ADD SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0x346 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x696E73756666696369656E742066756E64730000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SUB PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x40A JUMPI INVALID JUMPDEST DUP1 PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SUB SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x4D8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH29 0xCC943A1D2828D2EB6A6B2BDDA248317F698A018134AA49064100814CD6 EQ DUP12 PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "28:813:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;816:14;:12;:14::i;:::-;28:813;329:322;;8:9:-1;5:2;;;30:1;27;20:12;5:2;329:322:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;329:322:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;118:203;;;:::i;:::-;;60:49;;8:9:-1;5:2;;;30:1;27;20:12;5:2;60:49:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;60:49:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;118:203;226:15;:27;242:10;226:27;;;;;;;;;;;;;;;;;;;;;;;;;175:78;;212:9;175:15;:27;191:10;175:27;;;;;;;;;;;;;;;;;;;;;;;;;:47;:78;;;;168:86;;;;303:9;265:15;:27;281:10;265:27;;;;;;;;;;;;;;;;:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;118:203::o;329:322::-;426:15;:27;442:10;426:27;;;;;;;;;;;;;;;;;;;;;;;;;415:38;;:7;:38;;;;407:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;554:7;524:15;:27;540:10;524:27;;;;;;;;;;;;;;;;;;;;;;;;;:37;493:68;;:15;:27;509:10;493:27;;;;;;;;;;;;;;;;;;;;;;;;;:68;;;;486:76;;;;604:7;573:15;:27;589:10;573:27;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;622:3;:12;;:21;635:7;622:21;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;622:21:0;329:322;;:::o;60:49::-;;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "267400",
								"executionCost": "306",
								"totalCost": "267706"
							},
							"external": {
								"": "23840",
								"balanceRecieved(address)": "1228",
								"recieveMoney()": "23818",
								"withdrawMoney(address,uint64)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 28,
									"end": 841,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 28,
									"end": 841,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 28,
									"end": 841,
									"name": "MSTORE"
								},
								{
									"begin": 28,
									"end": 841,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 28,
									"end": 841,
									"name": "POP"
								},
								{
									"begin": 28,
									"end": 841,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28,
									"end": 841,
									"name": "DUP1"
								},
								{
									"begin": 28,
									"end": 841,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28,
									"end": 841,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 28,
									"end": 841,
									"name": "CODECOPY"
								},
								{
									"begin": 28,
									"end": 841,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 28,
									"end": 841,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158207ccc943a1d2828d2eb6a6b2bdda248317f698a018134aa49064100814cd6148b64736f6c63430005110032",
									".code": [
										{
											"begin": 28,
											"end": 841,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 28,
											"end": 841,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28,
											"end": 841,
											"name": "MSTORE"
										},
										{
											"begin": 28,
											"end": 841,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 28,
											"end": 841,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 28,
											"end": 841,
											"name": "LT"
										},
										{
											"begin": 28,
											"end": 841,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 28,
											"end": 841,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 841,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28,
											"end": 841,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 28,
											"end": 841,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 28,
											"end": 841,
											"name": "SHR"
										},
										{
											"begin": 28,
											"end": 841,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 841,
											"name": "PUSH",
											"value": "AD19AEB"
										},
										{
											"begin": 28,
											"end": 841,
											"name": "EQ"
										},
										{
											"begin": 28,
											"end": 841,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 28,
											"end": 841,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 841,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 841,
											"name": "PUSH",
											"value": "CCA955A0"
										},
										{
											"begin": 28,
											"end": 841,
											"name": "EQ"
										},
										{
											"begin": 28,
											"end": 841,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 28,
											"end": 841,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 841,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 841,
											"name": "PUSH",
											"value": "D8D4F50D"
										},
										{
											"begin": 28,
											"end": 841,
											"name": "EQ"
										},
										{
											"begin": 28,
											"end": 841,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 28,
											"end": 841,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 841,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 28,
											"end": 841,
											"name": "JUMPDEST"
										},
										{
											"begin": 816,
											"end": 830,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 816,
											"end": 828,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 816,
											"end": 830,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 816,
											"end": 830,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 816,
											"end": 830,
											"name": "JUMPDEST"
										},
										{
											"begin": 28,
											"end": 841,
											"name": "STOP"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "JUMPDEST"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "POP"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "DUP1"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "DUP2"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "ADD"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "SWAP1"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "DUP1"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "DUP1"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "AND"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "SWAP1"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "ADD"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "SWAP1"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "SWAP3"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "SWAP2"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "SWAP1"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "DUP1"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "AND"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "SWAP1"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "ADD"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "SWAP1"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "SWAP3"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "SWAP2"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "SWAP1"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "POP"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "POP"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "POP"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "JUMPDEST"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "STOP"
										},
										{
											"begin": 118,
											"end": 321,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 118,
											"end": 321,
											"name": "JUMPDEST"
										},
										{
											"begin": 118,
											"end": 321,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 118,
											"end": 321,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 118,
											"end": 321,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 118,
											"end": 321,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 118,
											"end": 321,
											"name": "JUMPDEST"
										},
										{
											"begin": 118,
											"end": 321,
											"name": "STOP"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "JUMPDEST"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "POP"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "DUP2"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "SWAP1"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "AND"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "SWAP1"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "SWAP1"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "SWAP3"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "SWAP2"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "SWAP1"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "POP"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "POP"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "POP"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "JUMPDEST"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "MLOAD"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "DUP3"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "AND"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "AND"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "DUP2"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "MSTORE"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "ADD"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "SWAP2"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "POP"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "POP"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "MLOAD"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "SWAP2"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "SUB"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "SWAP1"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "RETURN"
										},
										{
											"begin": 118,
											"end": 321,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 118,
											"end": 321,
											"name": "JUMPDEST"
										},
										{
											"begin": 226,
											"end": 241,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 226,
											"end": 253,
											"name": "DUP1"
										},
										{
											"begin": 242,
											"end": 252,
											"name": "CALLER"
										},
										{
											"begin": 226,
											"end": 253,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 226,
											"end": 253,
											"name": "AND"
										},
										{
											"begin": 226,
											"end": 253,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 226,
											"end": 253,
											"name": "AND"
										},
										{
											"begin": 226,
											"end": 253,
											"name": "DUP2"
										},
										{
											"begin": 226,
											"end": 253,
											"name": "MSTORE"
										},
										{
											"begin": 226,
											"end": 253,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 226,
											"end": 253,
											"name": "ADD"
										},
										{
											"begin": 226,
											"end": 253,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 253,
											"name": "DUP2"
										},
										{
											"begin": 226,
											"end": 253,
											"name": "MSTORE"
										},
										{
											"begin": 226,
											"end": 253,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 226,
											"end": 253,
											"name": "ADD"
										},
										{
											"begin": 226,
											"end": 253,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 226,
											"end": 253,
											"name": "KECCAK256"
										},
										{
											"begin": 226,
											"end": 253,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 226,
											"end": 253,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 253,
											"name": "SLOAD"
										},
										{
											"begin": 226,
											"end": 253,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 253,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 226,
											"end": 253,
											"name": "EXP"
										},
										{
											"begin": 226,
											"end": 253,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 253,
											"name": "DIV"
										},
										{
											"begin": 226,
											"end": 253,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 226,
											"end": 253,
											"name": "AND"
										},
										{
											"begin": 175,
											"end": 253,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 175,
											"end": 253,
											"name": "AND"
										},
										{
											"begin": 212,
											"end": 221,
											"name": "CALLVALUE"
										},
										{
											"begin": 175,
											"end": 190,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 175,
											"end": 202,
											"name": "DUP1"
										},
										{
											"begin": 191,
											"end": 201,
											"name": "CALLER"
										},
										{
											"begin": 175,
											"end": 202,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 175,
											"end": 202,
											"name": "AND"
										},
										{
											"begin": 175,
											"end": 202,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 175,
											"end": 202,
											"name": "AND"
										},
										{
											"begin": 175,
											"end": 202,
											"name": "DUP2"
										},
										{
											"begin": 175,
											"end": 202,
											"name": "MSTORE"
										},
										{
											"begin": 175,
											"end": 202,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 175,
											"end": 202,
											"name": "ADD"
										},
										{
											"begin": 175,
											"end": 202,
											"name": "SWAP1"
										},
										{
											"begin": 175,
											"end": 202,
											"name": "DUP2"
										},
										{
											"begin": 175,
											"end": 202,
											"name": "MSTORE"
										},
										{
											"begin": 175,
											"end": 202,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 175,
											"end": 202,
											"name": "ADD"
										},
										{
											"begin": 175,
											"end": 202,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 175,
											"end": 202,
											"name": "KECCAK256"
										},
										{
											"begin": 175,
											"end": 202,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 175,
											"end": 202,
											"name": "SWAP1"
										},
										{
											"begin": 175,
											"end": 202,
											"name": "SLOAD"
										},
										{
											"begin": 175,
											"end": 202,
											"name": "SWAP1"
										},
										{
											"begin": 175,
											"end": 202,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 175,
											"end": 202,
											"name": "EXP"
										},
										{
											"begin": 175,
											"end": 202,
											"name": "SWAP1"
										},
										{
											"begin": 175,
											"end": 202,
											"name": "DIV"
										},
										{
											"begin": 175,
											"end": 202,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 175,
											"end": 202,
											"name": "AND"
										},
										{
											"begin": 175,
											"end": 222,
											"name": "ADD"
										},
										{
											"begin": 175,
											"end": 253,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 175,
											"end": 253,
											"name": "AND"
										},
										{
											"begin": 175,
											"end": 253,
											"name": "LT"
										},
										{
											"begin": 175,
											"end": 253,
											"name": "ISZERO"
										},
										{
											"begin": 168,
											"end": 254,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 168,
											"end": 254,
											"name": "JUMPI"
										},
										{
											"begin": 168,
											"end": 254,
											"name": "INVALID"
										},
										{
											"begin": 168,
											"end": 254,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 168,
											"end": 254,
											"name": "JUMPDEST"
										},
										{
											"begin": 303,
											"end": 312,
											"name": "CALLVALUE"
										},
										{
											"begin": 265,
											"end": 280,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 265,
											"end": 292,
											"name": "DUP1"
										},
										{
											"begin": 281,
											"end": 291,
											"name": "CALLER"
										},
										{
											"begin": 265,
											"end": 292,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 265,
											"end": 292,
											"name": "AND"
										},
										{
											"begin": 265,
											"end": 292,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 265,
											"end": 292,
											"name": "AND"
										},
										{
											"begin": 265,
											"end": 292,
											"name": "DUP2"
										},
										{
											"begin": 265,
											"end": 292,
											"name": "MSTORE"
										},
										{
											"begin": 265,
											"end": 292,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 265,
											"end": 292,
											"name": "ADD"
										},
										{
											"begin": 265,
											"end": 292,
											"name": "SWAP1"
										},
										{
											"begin": 265,
											"end": 292,
											"name": "DUP2"
										},
										{
											"begin": 265,
											"end": 292,
											"name": "MSTORE"
										},
										{
											"begin": 265,
											"end": 292,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 265,
											"end": 292,
											"name": "ADD"
										},
										{
											"begin": 265,
											"end": 292,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 265,
											"end": 292,
											"name": "KECCAK256"
										},
										{
											"begin": 265,
											"end": 292,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 265,
											"end": 313,
											"name": "DUP3"
										},
										{
											"begin": 265,
											"end": 313,
											"name": "DUP3"
										},
										{
											"begin": 265,
											"end": 313,
											"name": "DUP3"
										},
										{
											"begin": 265,
											"end": 313,
											"name": "SWAP1"
										},
										{
											"begin": 265,
											"end": 313,
											"name": "SLOAD"
										},
										{
											"begin": 265,
											"end": 313,
											"name": "SWAP1"
										},
										{
											"begin": 265,
											"end": 313,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 265,
											"end": 313,
											"name": "EXP"
										},
										{
											"begin": 265,
											"end": 313,
											"name": "SWAP1"
										},
										{
											"begin": 265,
											"end": 313,
											"name": "DIV"
										},
										{
											"begin": 265,
											"end": 313,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 265,
											"end": 313,
											"name": "AND"
										},
										{
											"begin": 265,
											"end": 313,
											"name": "ADD"
										},
										{
											"begin": 265,
											"end": 313,
											"name": "SWAP3"
										},
										{
											"begin": 265,
											"end": 313,
											"name": "POP"
										},
										{
											"begin": 265,
											"end": 313,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 265,
											"end": 313,
											"name": "EXP"
										},
										{
											"begin": 265,
											"end": 313,
											"name": "DUP2"
										},
										{
											"begin": 265,
											"end": 313,
											"name": "SLOAD"
										},
										{
											"begin": 265,
											"end": 313,
											"name": "DUP2"
										},
										{
											"begin": 265,
											"end": 313,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 265,
											"end": 313,
											"name": "MUL"
										},
										{
											"begin": 265,
											"end": 313,
											"name": "NOT"
										},
										{
											"begin": 265,
											"end": 313,
											"name": "AND"
										},
										{
											"begin": 265,
											"end": 313,
											"name": "SWAP1"
										},
										{
											"begin": 265,
											"end": 313,
											"name": "DUP4"
										},
										{
											"begin": 265,
											"end": 313,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 265,
											"end": 313,
											"name": "AND"
										},
										{
											"begin": 265,
											"end": 313,
											"name": "MUL"
										},
										{
											"begin": 265,
											"end": 313,
											"name": "OR"
										},
										{
											"begin": 265,
											"end": 313,
											"name": "SWAP1"
										},
										{
											"begin": 265,
											"end": 313,
											"name": "SSTORE"
										},
										{
											"begin": 265,
											"end": 313,
											"name": "POP"
										},
										{
											"begin": 118,
											"end": 321,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "JUMPDEST"
										},
										{
											"begin": 426,
											"end": 441,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 426,
											"end": 453,
											"name": "DUP1"
										},
										{
											"begin": 442,
											"end": 452,
											"name": "CALLER"
										},
										{
											"begin": 426,
											"end": 453,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 426,
											"end": 453,
											"name": "AND"
										},
										{
											"begin": 426,
											"end": 453,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 426,
											"end": 453,
											"name": "AND"
										},
										{
											"begin": 426,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 426,
											"end": 453,
											"name": "MSTORE"
										},
										{
											"begin": 426,
											"end": 453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 426,
											"end": 453,
											"name": "ADD"
										},
										{
											"begin": 426,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 426,
											"end": 453,
											"name": "DUP2"
										},
										{
											"begin": 426,
											"end": 453,
											"name": "MSTORE"
										},
										{
											"begin": 426,
											"end": 453,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 426,
											"end": 453,
											"name": "ADD"
										},
										{
											"begin": 426,
											"end": 453,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 426,
											"end": 453,
											"name": "KECCAK256"
										},
										{
											"begin": 426,
											"end": 453,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 426,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 426,
											"end": 453,
											"name": "SLOAD"
										},
										{
											"begin": 426,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 426,
											"end": 453,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 426,
											"end": 453,
											"name": "EXP"
										},
										{
											"begin": 426,
											"end": 453,
											"name": "SWAP1"
										},
										{
											"begin": 426,
											"end": 453,
											"name": "DIV"
										},
										{
											"begin": 426,
											"end": 453,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 426,
											"end": 453,
											"name": "AND"
										},
										{
											"begin": 415,
											"end": 453,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 415,
											"end": 453,
											"name": "AND"
										},
										{
											"begin": 415,
											"end": 422,
											"name": "DUP2"
										},
										{
											"begin": 415,
											"end": 453,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 415,
											"end": 453,
											"name": "AND"
										},
										{
											"begin": 415,
											"end": 453,
											"name": "GT"
										},
										{
											"begin": 415,
											"end": 453,
											"name": "ISZERO"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "JUMPI"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "MLOAD"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "DUP2"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "MSTORE"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "ADD"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "DUP1"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "DUP1"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "ADD"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "DUP3"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "DUP2"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "SUB"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "DUP3"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "MSTORE"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "DUP2"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "MSTORE"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "ADD"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "DUP1"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "PUSH",
											"value": "696E73756666696369656E742066756E64730000000000000000000000000000"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "DUP2"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "MSTORE"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "POP"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "ADD"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "SWAP2"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "POP"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "POP"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "MLOAD"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "DUP1"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "SWAP2"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "SUB"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "SWAP1"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "REVERT"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 407,
											"end": 475,
											"name": "JUMPDEST"
										},
										{
											"begin": 554,
											"end": 561,
											"name": "DUP1"
										},
										{
											"begin": 524,
											"end": 539,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 524,
											"end": 551,
											"name": "DUP1"
										},
										{
											"begin": 540,
											"end": 550,
											"name": "CALLER"
										},
										{
											"begin": 524,
											"end": 551,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 524,
											"end": 551,
											"name": "AND"
										},
										{
											"begin": 524,
											"end": 551,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 524,
											"end": 551,
											"name": "AND"
										},
										{
											"begin": 524,
											"end": 551,
											"name": "DUP2"
										},
										{
											"begin": 524,
											"end": 551,
											"name": "MSTORE"
										},
										{
											"begin": 524,
											"end": 551,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 524,
											"end": 551,
											"name": "ADD"
										},
										{
											"begin": 524,
											"end": 551,
											"name": "SWAP1"
										},
										{
											"begin": 524,
											"end": 551,
											"name": "DUP2"
										},
										{
											"begin": 524,
											"end": 551,
											"name": "MSTORE"
										},
										{
											"begin": 524,
											"end": 551,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 524,
											"end": 551,
											"name": "ADD"
										},
										{
											"begin": 524,
											"end": 551,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 524,
											"end": 551,
											"name": "KECCAK256"
										},
										{
											"begin": 524,
											"end": 551,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 524,
											"end": 551,
											"name": "SWAP1"
										},
										{
											"begin": 524,
											"end": 551,
											"name": "SLOAD"
										},
										{
											"begin": 524,
											"end": 551,
											"name": "SWAP1"
										},
										{
											"begin": 524,
											"end": 551,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 524,
											"end": 551,
											"name": "EXP"
										},
										{
											"begin": 524,
											"end": 551,
											"name": "SWAP1"
										},
										{
											"begin": 524,
											"end": 551,
											"name": "DIV"
										},
										{
											"begin": 524,
											"end": 551,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 524,
											"end": 551,
											"name": "AND"
										},
										{
											"begin": 524,
											"end": 561,
											"name": "SUB"
										},
										{
											"begin": 493,
											"end": 561,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 493,
											"end": 561,
											"name": "AND"
										},
										{
											"begin": 493,
											"end": 508,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 493,
											"end": 520,
											"name": "DUP1"
										},
										{
											"begin": 509,
											"end": 519,
											"name": "CALLER"
										},
										{
											"begin": 493,
											"end": 520,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 493,
											"end": 520,
											"name": "AND"
										},
										{
											"begin": 493,
											"end": 520,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 493,
											"end": 520,
											"name": "AND"
										},
										{
											"begin": 493,
											"end": 520,
											"name": "DUP2"
										},
										{
											"begin": 493,
											"end": 520,
											"name": "MSTORE"
										},
										{
											"begin": 493,
											"end": 520,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 493,
											"end": 520,
											"name": "ADD"
										},
										{
											"begin": 493,
											"end": 520,
											"name": "SWAP1"
										},
										{
											"begin": 493,
											"end": 520,
											"name": "DUP2"
										},
										{
											"begin": 493,
											"end": 520,
											"name": "MSTORE"
										},
										{
											"begin": 493,
											"end": 520,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 493,
											"end": 520,
											"name": "ADD"
										},
										{
											"begin": 493,
											"end": 520,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 493,
											"end": 520,
											"name": "KECCAK256"
										},
										{
											"begin": 493,
											"end": 520,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 493,
											"end": 520,
											"name": "SWAP1"
										},
										{
											"begin": 493,
											"end": 520,
											"name": "SLOAD"
										},
										{
											"begin": 493,
											"end": 520,
											"name": "SWAP1"
										},
										{
											"begin": 493,
											"end": 520,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 493,
											"end": 520,
											"name": "EXP"
										},
										{
											"begin": 493,
											"end": 520,
											"name": "SWAP1"
										},
										{
											"begin": 493,
											"end": 520,
											"name": "DIV"
										},
										{
											"begin": 493,
											"end": 520,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 493,
											"end": 520,
											"name": "AND"
										},
										{
											"begin": 493,
											"end": 561,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 493,
											"end": 561,
											"name": "AND"
										},
										{
											"begin": 493,
											"end": 561,
											"name": "LT"
										},
										{
											"begin": 493,
											"end": 561,
											"name": "ISZERO"
										},
										{
											"begin": 486,
											"end": 562,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 486,
											"end": 562,
											"name": "JUMPI"
										},
										{
											"begin": 486,
											"end": 562,
											"name": "INVALID"
										},
										{
											"begin": 486,
											"end": 562,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 486,
											"end": 562,
											"name": "JUMPDEST"
										},
										{
											"begin": 604,
											"end": 611,
											"name": "DUP1"
										},
										{
											"begin": 573,
											"end": 588,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 573,
											"end": 600,
											"name": "DUP1"
										},
										{
											"begin": 589,
											"end": 599,
											"name": "CALLER"
										},
										{
											"begin": 573,
											"end": 600,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 573,
											"end": 600,
											"name": "AND"
										},
										{
											"begin": 573,
											"end": 600,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 573,
											"end": 600,
											"name": "AND"
										},
										{
											"begin": 573,
											"end": 600,
											"name": "DUP2"
										},
										{
											"begin": 573,
											"end": 600,
											"name": "MSTORE"
										},
										{
											"begin": 573,
											"end": 600,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 573,
											"end": 600,
											"name": "ADD"
										},
										{
											"begin": 573,
											"end": 600,
											"name": "SWAP1"
										},
										{
											"begin": 573,
											"end": 600,
											"name": "DUP2"
										},
										{
											"begin": 573,
											"end": 600,
											"name": "MSTORE"
										},
										{
											"begin": 573,
											"end": 600,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 573,
											"end": 600,
											"name": "ADD"
										},
										{
											"begin": 573,
											"end": 600,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 573,
											"end": 600,
											"name": "KECCAK256"
										},
										{
											"begin": 573,
											"end": 600,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 573,
											"end": 611,
											"name": "DUP3"
										},
										{
											"begin": 573,
											"end": 611,
											"name": "DUP3"
										},
										{
											"begin": 573,
											"end": 611,
											"name": "DUP3"
										},
										{
											"begin": 573,
											"end": 611,
											"name": "SWAP1"
										},
										{
											"begin": 573,
											"end": 611,
											"name": "SLOAD"
										},
										{
											"begin": 573,
											"end": 611,
											"name": "SWAP1"
										},
										{
											"begin": 573,
											"end": 611,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 573,
											"end": 611,
											"name": "EXP"
										},
										{
											"begin": 573,
											"end": 611,
											"name": "SWAP1"
										},
										{
											"begin": 573,
											"end": 611,
											"name": "DIV"
										},
										{
											"begin": 573,
											"end": 611,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 573,
											"end": 611,
											"name": "AND"
										},
										{
											"begin": 573,
											"end": 611,
											"name": "SUB"
										},
										{
											"begin": 573,
											"end": 611,
											"name": "SWAP3"
										},
										{
											"begin": 573,
											"end": 611,
											"name": "POP"
										},
										{
											"begin": 573,
											"end": 611,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 573,
											"end": 611,
											"name": "EXP"
										},
										{
											"begin": 573,
											"end": 611,
											"name": "DUP2"
										},
										{
											"begin": 573,
											"end": 611,
											"name": "SLOAD"
										},
										{
											"begin": 573,
											"end": 611,
											"name": "DUP2"
										},
										{
											"begin": 573,
											"end": 611,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 573,
											"end": 611,
											"name": "MUL"
										},
										{
											"begin": 573,
											"end": 611,
											"name": "NOT"
										},
										{
											"begin": 573,
											"end": 611,
											"name": "AND"
										},
										{
											"begin": 573,
											"end": 611,
											"name": "SWAP1"
										},
										{
											"begin": 573,
											"end": 611,
											"name": "DUP4"
										},
										{
											"begin": 573,
											"end": 611,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 573,
											"end": 611,
											"name": "AND"
										},
										{
											"begin": 573,
											"end": 611,
											"name": "MUL"
										},
										{
											"begin": 573,
											"end": 611,
											"name": "OR"
										},
										{
											"begin": 573,
											"end": 611,
											"name": "SWAP1"
										},
										{
											"begin": 573,
											"end": 611,
											"name": "SSTORE"
										},
										{
											"begin": 573,
											"end": 611,
											"name": "POP"
										},
										{
											"begin": 622,
											"end": 625,
											"name": "DUP2"
										},
										{
											"begin": 622,
											"end": 634,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 622,
											"end": 634,
											"name": "AND"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 635,
											"end": 642,
											"name": "DUP3"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "AND"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "SWAP1"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "DUP2"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "ISZERO"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "MUL"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "SWAP1"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "MLOAD"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "MLOAD"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "DUP1"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "DUP4"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "SUB"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "DUP2"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "DUP6"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "DUP9"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "DUP9"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "CALL"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "SWAP4"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "POP"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "POP"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "POP"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "POP"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 622,
											"end": 643,
											"name": "POP"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "POP"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "POP"
										},
										{
											"begin": 329,
											"end": 651,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "JUMPDEST"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "MSTORE"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "DUP1"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "MSTORE"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "KECCAK256"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "SWAP2"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "POP"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "SLOAD"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "SWAP1"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "EXP"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "SWAP1"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "DIV"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "AND"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "DUP2"
										},
										{
											"begin": 60,
											"end": 109,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"balanceRecieved(address)": "d8d4f50d",
							"recieveMoney()": "cca955a0",
							"withdrawMoney(address,uint64)": "0ad19aeb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceRecieved\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"recieveMoney\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_amount\",\"type\":\"uint64\"}],\"name\":\"withdrawMoney\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/FunctionExample.sol\":\"FunctionExample\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FunctionExample.sol\":{\"keccak256\":\"0x5aadf03755c10f1d0d5924d0b0860ad0c5035a9b726f7242aec73464c487af72\",\"urls\":[\"bzz-raw://87facceb7ee73229434792601662ade3f76fe9011d60dc746de17f74a5ea4b1a\",\"dweb:/ipfs/QmZ69qszTJjrJLoV6abnRnAauMkb4TFrBTqyekSrx9dGhq\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/FunctionExample.sol": {
				"ast": {
					"absolutePath": "contracts/FunctionExample.sol",
					"exportedSymbols": {
						"FunctionExample": [
							89
						]
					},
					"id": 90,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "FunctionExample",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 5,
									"name": "balanceRecieved",
									"nodeType": "VariableDeclaration",
									"scope": 89,
									"src": "60:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint64_$",
										"typeString": "mapping(address => uint64)"
									},
									"typeName": {
										"id": 4,
										"keyType": {
											"id": 2,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "68:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "60:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint64_$",
											"typeString": "mapping(address => uint64)"
										},
										"valueType": {
											"id": 3,
											"name": "uint64",
											"nodeType": "ElementaryTypeName",
											"src": "79:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 35,
										"nodeType": "Block",
										"src": "157:164:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																"id": 17,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 9,
																		"name": "balanceRecieved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5,
																		"src": "175:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint64_$",
																			"typeString": "mapping(address => uint64)"
																		}
																	},
																	"id": 12,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 10,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 104,
																			"src": "191:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 11,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "191:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "175:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 14,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 104,
																				"src": "212:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 15,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "212:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 13,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "205:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint64_$",
																			"typeString": "type(uint64)"
																		},
																		"typeName": "uint64"
																	},
																	"id": 16,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "205:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "175:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 18,
																	"name": "balanceRecieved",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "226:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint64_$",
																		"typeString": "mapping(address => uint64)"
																	}
																},
																"id": 21,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 19,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 104,
																		"src": "242:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 20,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "242:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "226:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "175:78:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 8,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 93,
														"src": "168:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "168:86:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "168:86:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 25,
															"name": "balanceRecieved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "265:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint64_$",
																"typeString": "mapping(address => uint64)"
															}
														},
														"id": 28,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 26,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "281:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 27,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "281:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "265:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 30,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 104,
																	"src": "303:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 31,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "303:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 29,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "296:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": "uint64"
														},
														"id": 32,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "296:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "265:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "265:48:0"
											}
										]
									},
									"documentation": null,
									"id": 36,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recieveMoney",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "139:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "157:0:0"
									},
									"scope": 89,
									"src": "118:203:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "396:255:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 44,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "415:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 45,
																	"name": "balanceRecieved",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "426:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint64_$",
																		"typeString": "mapping(address => uint64)"
																	}
																},
																"id": 48,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 46,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 104,
																		"src": "442:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 47,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "442:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "426:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "415:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "696e73756666696369656e742066756e6473",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "454:20:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5",
																"typeString": "literal_string \"insufficient funds\""
															},
															"value": "insufficient funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c6bc4f5b747fbbc581777f92b42c6eac56dbbb4e624c68b8c1a6001ff2001fc5",
																"typeString": "literal_string \"insufficient funds\""
															}
														],
														"id": 43,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															107,
															108
														],
														"referencedDeclaration": 108,
														"src": "407:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "407:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "407:68:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 54,
																	"name": "balanceRecieved",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "493:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint64_$",
																		"typeString": "mapping(address => uint64)"
																	}
																},
																"id": 57,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 55,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 104,
																		"src": "509:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 56,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "509:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "493:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																"id": 63,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 58,
																		"name": "balanceRecieved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5,
																		"src": "524:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint64_$",
																			"typeString": "mapping(address => uint64)"
																		}
																	},
																	"id": 61,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 59,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 104,
																			"src": "540:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 60,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "540:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "524:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 62,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "554:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "524:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "493:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 53,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 93,
														"src": "486:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "486:76:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "486:76:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 67,
															"name": "balanceRecieved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "573:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint64_$",
																"typeString": "mapping(address => uint64)"
															}
														},
														"id": 70,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 68,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "589:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "589:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "573:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 71,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "604:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "573:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 73,
												"nodeType": "ExpressionStatement",
												"src": "573:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 77,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 40,
															"src": "635:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 74,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 38,
															"src": "622:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "622:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "622:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "622:21:0"
											}
										]
									},
									"documentation": null,
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawMoney",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "352:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "352:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "373:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 39,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "373:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "351:37:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "396:0:0"
									},
									"scope": 89,
									"src": "329:322:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "805:33:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "recieveMoney",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "816:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "816:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "816:14:0"
											}
										]
									},
									"documentation": null,
									"id": 88,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "785:2:0"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:0:0"
									},
									"scope": 89,
									"src": "776:62:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 90,
							"src": "28:813:0"
						}
					],
					"src": "0:841:0"
				},
				"id": 0
			}
		}
	}
}